\documentclass[final]{beamer}
\usepackage{grffile}
\mode<presentation>{\usetheme{CambridgeUSPOL}}

\usepackage[utf8]{inputenc}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{natbib}
\usepackage{graphicx}
\usepackage{array,booktabs,tabularx}
\usepackage{epstopdf}
\usepackage{colortbl, xcolor}
\newcolumntype{Z}{>{\centering\arraybackslash}X}

% rysunki
\usepackage{tikz}
\usepackage{ifthen}
\usepackage{xxcolor}
\usetikzlibrary{arrows}
\usetikzlibrary[topaths]
\usetikzlibrary{decorations.pathreplacing}
%\usepackage{times}\usefonttheme{professionalfonts}  % times is obsolete
\usefonttheme[onlymath]{serif}
\boldmath
\usepackage[orientation=portrait,size=a0,scale=1.4,debug]{beamerposter}                       % e.g. for DIN-A0 poster
%\usepackage[orientation=portrait,size=a1,scale=1.4,grid,debug]{beamerposter}                  % e.g. for DIN-A1 poster, with optional grid and debug output
%\usepackage[size=custom,width=200,height=120,scale=2,debug]{beamerposter}                     % e.g. for custom size poster
%\usepackage[orientation=portrait,size=a0,scale=1.0,printer=rwth-glossy-uv.df]{beamerposter}   % e.g. for DIN-A0 poster with rwth-glossy-uv printer check
% ...
%

\usecolortheme{seagull}
\useinnertheme{rectangles}
\setbeamercolor{item projected}{bg=darkred}
% \setbeamertemplate{enumerate items}[default]
\setbeamertemplate{caption}{\insertcaption} 
\setbeamertemplate{navigation symbols}{}
\setbeamercovered{transparent}
\setbeamercolor{block title}{fg=darkred}
\setbeamercolor{local structure}{fg=darkred}

\setbeamercolor*{enumerate item}{fg=darkred}
\setbeamercolor*{enumerate subitem}{fg=darkred}
\setbeamercolor*{enumerate subsubitem}{fg=darkred}

\setbeamercolor*{itemize item}{fg=darkred}
\setbeamercolor*{itemize subitem}{fg=darkred}
\setbeamercolor*{itemize subsubitem}{fg=darkred}

\newlength{\columnheight}
\setlength{\columnheight}{96cm}
\renewcommand{\thetable}{}
\def\andname{,}
\authornote{}

\renewcommand{\APACrefatitle}[2]{}
\renewcommand{\bibliographytypesize}{\footnotesize} 
\renewcommand{\APACrefYearMonthDay}[3]{%
  {\BBOP}{#1}
  {\BBCP}
}

\begin{document}

<<knitrIntro, echo = FALSE, message=FALSE,warning=FALSE>>=
library(dplyr)
library(reshape2)
library(xtable)
library(biogram)
library(latex2exp)

source("my_ggplot_theme.R")
source("xtable_printbold.R")

@


\date{}
\author{Micha\l{} Burdukiewicz\inst{1}, Piotr Sobczyk\inst{2} and Pawe\l{} Mackiewicz\inst{1}\\
\small{*michalburdukiewicz@gmail.com}}


\institute{\small{\textsuperscript{1}University of Wroc\l{}aw, Department of Genomics 

\textsuperscript{2}Wroc\l{}aw University of Science and Technology, Faculty of Pure and Applied Mathematics
}
}
}
\title{\huge biogram: standardization of biological n-gram analysis in R}

\begin{frame}
\begin{columns}
\begin{column}{.485\textwidth}
\begin{beamercolorbox}[center,wd=\textwidth]{postercolumn}
\begin{minipage}[T]{.95\textwidth}
\parbox[t][\columnheight]{\textwidth}
{
\begin{block}{Aim}

Create an integrated workflow to standardize analysis of n-grams extracted from biological sequences in the \textbf{R} environment covering all stages of n-gram analysis, from counting n-grams through selection of informative n-grams till preparation of n-gram datasets for machine learning algorithms.

\end{block}

\begin{block}{n-grams}
n-grams (k-tuples) are vectors of n characters derived from input sequence(s). They may form continuous sub-sequences or be discontinuous. 
Important n-gram parameter is its position. Instead of just counting n-grams, one may want to count how many n-grams occur at a given position in multiple (e.g. related) sequences.

Originally developed for natural language processing, n-grams are also used in genomics~\citep{fang2011} and proteomics~\citep{guo2014}.


\small{
       \begin{columns}[c] % the "c" option specifies center vertical alignment
    \column{.5\textwidth} 
<<echo = FALSE,message=FALSE,results='asis'>>=
sample_seq <- matrix(sample(c("A", "C", "G", "T"), 18, replace = TRUE), nrow = 3)
colnames(sample_seq) <- paste0("P", 1L:ncol(sample_seq))
rownames(sample_seq) <- paste0("S", 1L:nrow(sample_seq))
rws <- seq(1, nrow(sample_seq) - 1, by = 2)
col <- rep("\\rowcolor{white}", length(rws))

print(xtable(data.frame(sample_seq), caption = "Sample sequences.  S - sequence, P - postion.", digits = 0),
      booktabs = TRUE, add.to.row = list(pos = as.list(rws), command = col))

# unis <- count_ngrams(sample_seq, 1, 1L:4, pos = TRUE)
# unis <- data.frame(as.matrix(unis))[, 1L:7]
# print(xtable(unis, caption = "A fraction of possible unigrams with position information.", digits = 0), include.rownames = FALSE)
@
      
      
     % column designated by a command

    \column{.5\textwidth}
    
<<echo = FALSE,message=FALSE,results='asis'>>=
    
     unis <- count_ngrams(sample_seq, 1, c("A", "C", "G", "T"))
unis <- data.frame(as.matrix(unis))
colnames(unis) <- c("A", "C", "G", "T")
rownames(unis) <- paste0("S", 1L:nrow(sample_seq))
print(xtable(unis, caption = "Unigram counts.", digits = 0), include.rownames = TRUE,
      booktabs = TRUE, add.to.row = list(pos = as.list(rws), command = col))
@

    \end{columns}

<<echo = FALSE,message=FALSE,results='asis'>>=
    
unis <- count_ngrams(sample_seq, 1, c("A", "C", "G", "T"), pos = TRUE)
unis <- data.frame(as.matrix(unis))[, 1L:13]
colnames(unis) <- substr(sub("X", "P", colnames(unis)), 0, 4)
rownames(unis) <- paste0("S", 1L:nrow(sample_seq))
print(xtable(unis, caption = "A fraction of possible unigrams with position information.", digits = 0), 
      include.rownames = TRUE,
      booktabs = TRUE, add.to.row = list(pos = as.list(rws), command = col))
@
}    
    \end{block}

 \begin{block}{n-gram name convention}
    n-gram names in \textbf{biogram} follow a specific convention and have three parts for position-specific n-grams and two parts otherwise. The parts are separated by underscore (\_). The dot (.) symbol is used to separate elements within a part.
      
\begin{figure} 
\includegraphics[width=0.63\columnwidth]{static_figure/name_convention.eps}
\end{figure}      
      
\begin{itemize}

\item \texttt{46\_G.G.A\_0.1}: trigram GG-A on position 46

\item \texttt{8\_W.Y\_2}: bigram W-{}-Y on position 8.

\item \texttt{A.C\_2}: bigram A-{}-C without position information

\end{itemize}
      
    \end{block}
    \vfill

\begin{block}{Sparse matrix representation}
    Large n-gram datasets are difficult to process in \textbf{R}. We use \textbf{slam} package to store n-gram data instead of more cumbersome matrix representation. All functions in the package have specific methods to work both with matrices and \textbf{slam} objects.
      
    \end{block}
    \vfill


 \begin{block}{QuiPT}
 Since the majority of n-grams is noninformative, it is necessary to filter them usually with a permutation test. We introduce \textbf{Qui}ck \textbf{P}ermutation \textbf{T}est (QuiPT), which thanks to the unique parameterization replaces a permutation test with the exact two-sided Fisher's test~\citep{lehmann1986testing} reducing the computation cost. 
 
  During a typical permutation test class labels are randomly exchanged during computation of a significance statistic. p-values are defined as:
    
\begin{center}
\scalebox{0.85}{
$      
\textnormal{p-value} = \frac{N_{T_P > T_R}}{N}
$
}
\end{center}

where $N_{T_P > T_R}$ is number of times when $T_P$ (permuted test statistic) was more extreme than $T_R$ (test statistic for non-permuted data).

Permutation tests are computationally expensive (especially considering precise estimation of small p-values, because the number of permutations is inversely proportional to the interval between p-values).

On the contrary, the cost of performing QuiPT is equal to computing a test statistic and 
probability of occurrence for $n_{1,1} + n_{0,1}$ contingency tables.
      
    \end{block}
    \vfill

 \begin{block}{Bibliography}
  \tiny{
  \bibliographystyle{apalike}
  \bibliography{references}
  }
  \end{block}
  \vfill  


}
\end{minipage}
\end{beamercolorbox}
\end{column}


%new column ------------------------------------------------------    

\begin{column}{.51\textwidth}
\begin{beamercolorbox}[center,wd=\textwidth]{postercolumn}
\begin{minipage}[T]{.95\textwidth}  
\parbox[t][\columnheight]{\textwidth}
{


\begin{block}{Reduction of the alphabet and encoding distance}

To reduce number of n-grams and get more informative features, the alphabet (mostly amino acid, rarely nucleic) can be reduced using various clustering methods.

<<echo = FALSE,message=FALSE,results='asis'>>=
    
a <- list(`1` = "p", 
          `2` = c("f", "i", "w", "y"), 
          `3` = c("a", "c", "d", "e", "g", "h", "k", "l", "m", "n", "q", "r", "s", "t", "v"))


b <- list(`1` = c("f", "r", "w", "y"), 
          `2` = c("c", "i", "l", "t", "v"), 
          `3` = c("a", "d", "e", "g", "h", "k", "m", "n", "p", "q", "s"))

enc2df <- function(x)
  data.frame(Names = names(x), Elements = toupper(sapply(x, paste0, collapse = ", ")))

print(xtable(enc2df(a), caption = "Sample encoding \\textbf{a}.", digits = 0),
      booktabs = TRUE, add.to.row = list(pos = as.list(rws), command = col), include.rownames = FALSE)

print(xtable(enc2df(b), caption = "Sample encoding \\textbf{b}.", digits = 0),
      booktabs = TRUE, add.to.row = list(pos = as.list(rws), command = col), include.rownames = FALSE)

@

\end{block}
\vfill

\begin{block}{Encoding distance}

The encoding distance is defined as the minimum number of elements that have to be moved between subgroups of encoding to make \textbf{a} identical to \textbf{b} (the order of subgroups in the encoding and elements in a group is unimportant). This measure may be further normalized by a factor $s_{ab}$ reflecting how much moving amino acids between groups altered mean group properties. 

\bigskip

In case of the examplary encodings \textbf{a} and \textbf{b} the encoding distance is equal to 7.

\end{block}
\vfill

\begin{block}{Normalization of encoding distance}

To compute the scale factor $s$ for the encoding distance between the encoding 
\textit{a} with $n$ subgroups (enumerated with $i$) and the encoding \textit{b} 
with $m$ subgroups (enumerated with $j$), we first calculated $p_i$ and $q_j$, 
i.e. the mean values of corresponding physicochemical properties of all amino acids for each 
subgroup. 

The factor $s$ between encodings $a$ and $b$ is equal to: 

$$ 
s_{ab} = \sum^n_{i = 1}  \left( \min_{j=1,\dots,m} \; \; \sum^L_{l=1} \sqrt{ 
(p_{i,l} - q_{j,l})^2} \right) 
$$

where $L$ is the number of considered physicochemical properties. Hence, the 
normalizing factor may be interpreted as the minimum change of the mean 
physicochemical properties between groups.

<<echo = FALSE,message=FALSE,results='asis',fig.width=14>>=
    
data(aaprop)
a_prop <- aaprop[c(22, 211), ]

#b_prop <- aa_nprop[na.omit(traits_table[ao, ]), , drop = FALSE]

# must have unified lists of features

coords_a <- lapply(a, function(single_subgroup) rowMeans(a_prop[, single_subgroup, drop = FALSE]))
coords_b <- lapply(b, function(single_subgroup) rowMeans(a_prop[, single_subgroup, drop = FALSE]))

dat_a <- data.frame(enc = "a", do.call(rbind, coords_a), label = paste0("A", 1L:3))
dat_b <- data.frame(enc = "b", do.call(rbind, coords_b), label = paste0("B", 1L:3))

dat <- data.frame(do.call(rbind, lapply(1L:nrow(dat_a), function(id) 
  data.frame(id = id, rbind(do.call(rbind, lapply(1L:3, function(dummy) 
    dat_a[id, , drop = FALSE])),
    dat_b)))), pair = c(paste0("d", 1L:3), paste0("d", 1L:3)))

colnames(dat) <- c("id", "enc", "f1", "f2", "label", "pair")
dat[["id"]] <- paste0("Encoding a\nsubgroup ", dat[["id"]])

ggplot(dat, aes(x = f1, y = f2, colour = pair, label = label)) +
  geom_line() +
  geom_point(aes(x = f1, y = f2, colour = enc), size = 4) + 
  facet_wrap(~ id) + 
  geom_text(aes(x = f1, y = f2, colour = enc, label = label), vjust = 2, size = 6) + 
  scale_color_brewer(palette="Dark2", guide = "none") +
  scale_x_continuous(TeX("p_1")) + 
  scale_x_continuous(TeX("p_2")) +
  coord_cartesian(ylim = c(0.05, 0.9)) +
  my_theme

@


<<echo = FALSE,message=FALSE,results='asis'>>=

tmp <- sapply(coords_a, function(single_coords_a) {
  distances <- sapply(coords_b, function(single_coords_b) 
    #vector of distances between groups
    sqrt(sum((single_coords_a - single_coords_b)^2))
  )
  #c(dist = min(distances), id = unname(which.min(distances)))
  distances
})

colnames(tmp) <- paste0("Enc \\textbf{a}, group ", colnames(tmp))
rownames(tmp) <- paste0("Enc \\textbf{b}, group ", rownames(tmp))

printbold(xtable(tmp, digits = 4), 
      include.rownames = TRUE, booktabs = TRUE, add.to.row = list(pos = as.list(rws), command = col),
      sanitize.colnames.function = identity, sanitize.rownames.function = identity)

@

On the example above, the $s_{ab}$ is equal to the sum of $0.1219, 0.1787$ and $0.1559$.

\end{block}
\vfill 





\begin{block}{Summary and funding}
The \textbf{biogram} package streamlines n-gram analysis by providing an integrated workflow containing data storage (sparse matrix representation) data managment (reduction of alphabets) and feature filtering (QuiPT). 

\bigskip
\textbf{biogram} is avaible on CRAN: \url{http://cran.r-project.org/package=biogram}.

\bigskip

\textbf{biogram}-based software is avaible as web-servers:

\begin{enumerate}

\item \textit{signalHsmm} web-server: \url{smorfland.uni.wroc.pl/signalHsmm}.

\item \textit{AmyloGram} web-server: \url{smorfland.uni.wroc.pl/amylogram}.

\end{enumerate}

\bigskip

\small This research was partially funded by the National Science Center (2015/17/N/NZ2/01845) and University of Wrocław (6/MN/WB/15).

\end{block}
\vfill




}
\end{minipage}
\end{beamercolorbox}
\end{column}
\end{columns}  
\end{frame}
\end{document}